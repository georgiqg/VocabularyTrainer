// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VocabularyTrainer.Data;

namespace VocabularyTrainer.Migrations
{
    [DbContext(typeof(VocabularyTrainerContext))]
    [Migration("20210114232505_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("VocabularyTrainer.Models.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DefiniteArticle")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("IndefiniteArticle")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("ArticleId");

                    b.HasIndex("GenderId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.Deck", b =>
                {
                    b.Property<int>("DeckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DeckName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("DeckId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Deck");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GenderColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GenderName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenderId");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FlagIconUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FlagUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LanguageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LanguageId");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.LanguageTest", b =>
                {
                    b.Property<int>("LanguageTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageTestName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TestTypeId")
                        .HasColumnType("int");

                    b.HasKey("LanguageTestId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TestTypeId");

                    b.ToTable("LanguageTest");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.TestLog", b =>
                {
                    b.Property<int>("TestLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Accuracy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LanguageTestId")
                        .HasColumnType("int");

                    b.Property<int>("RightAnswers")
                        .HasColumnType("int");

                    b.Property<int>("WordsCount")
                        .HasColumnType("int");

                    b.HasKey("TestLogId");

                    b.HasIndex("LanguageTestId");

                    b.ToTable("TestLog");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.TestType", b =>
                {
                    b.Property<int>("TestTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TestTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TestTypeId");

                    b.ToTable("TestType");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("DeckId")
                        .HasColumnType("int");

                    b.Property<string>("Meaning")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Plural")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Singular")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WordId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("DeckId");

                    b.ToTable("Word");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.Article", b =>
                {
                    b.HasOne("VocabularyTrainer.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VocabularyTrainer.Models.Language", "Language")
                        .WithMany("Articles")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.Deck", b =>
                {
                    b.HasOne("VocabularyTrainer.Models.Language", "Language")
                        .WithMany("Decks")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.LanguageTest", b =>
                {
                    b.HasOne("VocabularyTrainer.Models.Language", "Language")
                        .WithMany("LanguageTests")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VocabularyTrainer.Models.TestType", "TestType")
                        .WithMany()
                        .HasForeignKey("TestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("TestType");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.TestLog", b =>
                {
                    b.HasOne("VocabularyTrainer.Models.LanguageTest", "LanguageTest")
                        .WithMany("TestLogs")
                        .HasForeignKey("LanguageTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LanguageTest");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.Word", b =>
                {
                    b.HasOne("VocabularyTrainer.Models.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VocabularyTrainer.Models.Deck", "Deck")
                        .WithMany("Words")
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.Deck", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.Language", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Decks");

                    b.Navigation("LanguageTests");
                });

            modelBuilder.Entity("VocabularyTrainer.Models.LanguageTest", b =>
                {
                    b.Navigation("TestLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
